<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>Newest Python PEPs</title>
    <link>https://peps.python.org/</link>
    <description>Newest Python Enhancement Proposals (PEPs): Information on new language features and some meta-information like release procedure and schedules.</description>
    <atom:link href="https://peps.python.org/peps.rss" rel="self"/>
    <docs>https://cyber.harvard.edu/rss/rss.html</docs>
    <language>en</language>
    <lastBuildDate>Wed, 09 Jul 2025 04:23:52 GMT</lastBuildDate>
    <item>
      <title>PEP 794: Import Name Metadata</title>
      <link>https://peps.python.org/pep-0794/</link>
      <description>This PEP proposes extending the core metadata specification for Python packaging to include a new, repeatable field named Import-Name to record the import names that a project owns/provides once installed. A new key named import-names will be added to the [project] table in pyproject.toml for providing the values for the new core metadata field. This also leads to the introduction of core metadata version 2.5.</description>
      <author>Brett Cannon (brett@python.org)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0794/</guid>
      <pubDate>Thu, 05 Jun 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 793: PyModExport: A new entry point for C extension modules</title>
      <link>https://peps.python.org/pep-0793/</link>
      <description>In this PEP, we propose a new entry point for C extension modules, by which one can define a module using an array of PyModuleDef_Slot structures without an enclosing PyModuleDef structure. This allows extension authors to avoid using a statically allocated PyObject, lifting the most common obstacle to making one compiled library file usable with both regular and free-threaded builds of CPython.</description>
      <author>Petr Viktorin (encukou@gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0793/</guid>
      <pubDate>Fri, 23 May 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 792: Project status markers in the simple index</title>
      <link>https://peps.python.org/pep-0792/</link>
      <description>This PEP proposes a standardized set of index-supplied project status markers, as well as a mechanism for communicating those markers in the HTML and JSON simple indices.</description>
      <author> ()</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0792/</guid>
      <pubDate>Wed, 21 May 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 791: imath --- module for integer-specific mathematics functions</title>
      <link>https://peps.python.org/pep-0791/</link>
      <description>This PEP proposes a new module for number-theoretical, combinatorial and other functions defined for integer arguments, like math.gcd() or math.isqrt().</description>
      <author>Sergey B Kirpichev (skirpichev@gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0791/</guid>
      <pubDate>Mon, 12 May 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 790: Python 3.15 Release Schedule</title>
      <link>https://peps.python.org/pep-0790/</link>
      <description>This document describes the development and release schedule for Python 3.15.</description>
      <author>Hugo van Kemenade</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0790/</guid>
      <pubDate>Sat, 26 Apr 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 788: Reimagining Native Threads</title>
      <link>https://peps.python.org/pep-0788/</link>
      <description>In the C API, threads are able to interact with an interpreter by holding an attached thread state for the current thread. This works well, but can get complicated when it comes to creating and attaching thread states in a thread-safe manner.</description>
      <author>Peter Bierma (zintensitydev@gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0788/</guid>
      <pubDate>Wed, 23 Apr 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 787: Safer subprocess usage using t-strings</title>
      <link>https://peps.python.org/pep-0787/</link>
      <description>PEP 750 introduced template strings (t-strings) as a generalization of f-strings, providing a way to safely handle string interpolation in various contexts. This PEP proposes extending the subprocess and shlex modules to natively support t-strings, enabling safer and more ergonomic shell command execution with interpolated values, as well as serving as a reference implementation for the t-string feature to improve API ergonomics.</description>
      <author>Nick Humrich (nick@humrich.us), Alyssa Coghlan (ncoghlan@gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0787/</guid>
      <pubDate>Sun, 13 Apr 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 785: New methods for easier handling of ``ExceptionGroup``\ s</title>
      <link>https://peps.python.org/pep-0785/</link>
      <description>As PEP 654 ExceptionGroup has come into widespread use across the Python community, some common but awkward patterns have emerged. We therefore propose adding two new methods to exception objects:</description>
      <author>Zac Hatfield-Dodds (zac@zhd.dev)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0785/</guid>
      <pubDate>Tue, 08 Apr 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 784: Adding Zstandard to the standard library</title>
      <link>https://peps.python.org/pep-0784/</link>
      <description>Zstandard is a widely adopted, mature, and highly efficient compression standard. This PEP proposes adding a new module to the Python standard library containing a Python wrapper around Metaâ€™s zstd library, the default implementation. Additionally, to avoid name collisions with packages on PyPI and to present a unified interface to Python users, compression modules in the standard library will be moved under a compression.* package.</description>
      <author>Emma Harper Smith (emma@python.org)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0784/</guid>
      <pubDate>Sun, 06 Apr 2025 00:00:00 GMT</pubDate>
    </item>
    <item>
      <title>PEP 783: Emscripten Packaging</title>
      <link>https://peps.python.org/pep-0783/</link>
      <description>This PEP proposes a new platform tag series pyodide for binary Python package distributions for the Pyodide Python runtime.</description>
      <author>Hood Chatham (roberthoodchatham at gmail.com)</author>
      <guid isPermaLink="true">https://peps.python.org/pep-0783/</guid>
      <pubDate>Fri, 28 Mar 2025 00:00:00 GMT</pubDate>
    </item>
  </channel>
</rss>
